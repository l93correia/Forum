// <auto-generated />
using System;
using Emsa.Mared.Discussions.API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Discussions.API.Migrations
{
    [DbContext(typeof(DiscussionContext))]
    [Migration("20190412090707_updateV1k")]
    partial class updateV1k
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Emsa.Mared.Discussions.API.Database.Repositories.Attachments.Attachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("DiscussionId");

                    b.Property<long>("ExternalId");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("DiscussionId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Emsa.Mared.Discussions.API.Database.Repositories.Discussions.Discussion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("AttachmentId");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime?>("EndDate");

                    b.Property<string>("Status");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Discussions");
                });

            modelBuilder.Entity("Emsa.Mared.Discussions.API.Database.Repositories.Participants.Participant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("DiscussionId");

                    b.Property<long>("EntityId");

                    b.Property<int>("EntityType");

                    b.HasKey("Id");

                    b.HasIndex("DiscussionId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("Emsa.Mared.Discussions.API.Database.Repositories.Responses.Response", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<long>("DiscussionId");

                    b.Property<string>("Status");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DiscussionId");

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("Emsa.Mared.Discussions.API.Database.Repositories.Attachments.Attachment", b =>
                {
                    b.HasOne("Emsa.Mared.Discussions.API.Database.Repositories.Discussions.Discussion", "Discussion")
                        .WithMany("Attachments")
                        .HasForeignKey("DiscussionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Emsa.Mared.Discussions.API.Database.Repositories.Participants.Participant", b =>
                {
                    b.HasOne("Emsa.Mared.Discussions.API.Database.Repositories.Discussions.Discussion", "Discussion")
                        .WithMany("Participants")
                        .HasForeignKey("DiscussionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Emsa.Mared.Discussions.API.Database.Repositories.Responses.Response", b =>
                {
                    b.HasOne("Emsa.Mared.Discussions.API.Database.Repositories.Discussions.Discussion", "Discussion")
                        .WithMany("Responses")
                        .HasForeignKey("DiscussionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
