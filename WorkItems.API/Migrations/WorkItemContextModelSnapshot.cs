// <auto-generated />
using System;
using Emsa.Mared.WorkItems.API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace WorkItems.API.Migrations
{
    [DbContext(typeof(WorkItemsContext))]
    partial class WorkItemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Emsa.Mared.WorkItems.API.Database.Repositories.WorkItemAttachments.WorkItemAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("ExternalId")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<long>("UserId");

                    b.Property<long>("WorkItemId");

                    b.HasKey("Id");

                    b.HasIndex("WorkItemId");

                    b.ToTable("WorkItemAttachments");
                });

            modelBuilder.Entity("Emsa.Mared.WorkItems.API.Database.Repositories.WorkItemComments.WorkItemComment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("Status");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<long>("UserId");

                    b.Property<long>("WorkItemId");

                    b.HasKey("Id");

                    b.HasIndex("WorkItemId");

                    b.ToTable("WorkItemComments");
                });

            modelBuilder.Entity("Emsa.Mared.WorkItems.API.Database.Repositories.WorkItemParticipants.WorkItemParticipant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("EntityId");

                    b.Property<int>("EntityType");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<long>("UserId");

                    b.Property<long>("WorkItemId");

                    b.HasKey("Id");

                    b.HasIndex("WorkItemId");

                    b.ToTable("WorkItemParticipants");
                });

            modelBuilder.Entity("Emsa.Mared.WorkItems.API.Database.Repositories.WorkItemRelations.WorkItemRelation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("RelatedFromWorkItemId");

                    b.Property<long>("RelatedToWorkItemId");

                    b.Property<int>("RelationType");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RelatedFromWorkItemId")
                        .IsUnique();

                    b.HasIndex("RelatedToWorkItemId")
                        .IsUnique();

                    b.HasIndex("RelatedFromWorkItemId", "RelatedToWorkItemId", "RelationType");

                    b.ToTable("WorkItemRelations");
                });

            modelBuilder.Entity("Emsa.Mared.WorkItems.API.Database.Repositories.WorkItems.WorkItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(2500);

                    b.Property<DateTime?>("ClosedAt");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime?>("EndsAt");

                    b.Property<bool>("IsPublic");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime?>("StartsAt");

                    b.Property<int>("Status");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<long>("UserId");

                    b.Property<int>("WorkItemType");

                    b.HasKey("Id");

                    b.HasIndex("IsPublic");

                    b.HasIndex("Status");

                    b.HasIndex("WorkItemType");

                    b.ToTable("WorkItems");
                });

            modelBuilder.Entity("Emsa.Mared.WorkItems.API.Database.Repositories.WorkItemAttachments.WorkItemAttachment", b =>
                {
                    b.HasOne("Emsa.Mared.WorkItems.API.Database.Repositories.WorkItems.WorkItem", "WorkItem")
                        .WithMany("WorkItemAttachments")
                        .HasForeignKey("WorkItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Emsa.Mared.WorkItems.API.Database.Repositories.WorkItemComments.WorkItemComment", b =>
                {
                    b.HasOne("Emsa.Mared.WorkItems.API.Database.Repositories.WorkItems.WorkItem", "WorkItem")
                        .WithMany("WorkItemComments")
                        .HasForeignKey("WorkItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Emsa.Mared.WorkItems.API.Database.Repositories.WorkItemParticipants.WorkItemParticipant", b =>
                {
                    b.HasOne("Emsa.Mared.WorkItems.API.Database.Repositories.WorkItems.WorkItem", "WorkItem")
                        .WithMany("WorkItemParticipants")
                        .HasForeignKey("WorkItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Emsa.Mared.WorkItems.API.Database.Repositories.WorkItemRelations.WorkItemRelation", b =>
                {
                    b.HasOne("Emsa.Mared.WorkItems.API.Database.Repositories.WorkItems.WorkItem", "RelatedFromWorkItem")
                        .WithMany("RelatedToWorkItems")
                        .HasForeignKey("RelatedFromWorkItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Emsa.Mared.WorkItems.API.Database.Repositories.WorkItems.WorkItem", "RelatedToWorkItem")
                        .WithMany("RelatedFromWorkItems")
                        .HasForeignKey("RelatedToWorkItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
